@page "/"
@inject NavigationManager NavigationManager
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage

<style>
    body {
        background: linear-gradient( rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.4) ), url("images/image1.png") no-repeat center center fixed;
        background-size: cover;
    }
</style>

<PageTitle>Index</PageTitle>

<div class="container-narrow">

    <div class="jumbotron">
        <h1>Create and view playlists by your choices!</h1>
        <p class="lead">Create and manage playlists, such as inserting videos, adjust the sequence order and control the process, and view not only your playlists, but other peoples' playlists, with a simple search.</p>
        <a class="btn btn-primary btn-lg" href="/signup">Sign up today!</a>
    </div>

    <hr>

    <div class="row-fluid marketing container">
        <div class="span6 text-center row">
            <div class="col-md-6">
                <h4>Accounts</h4>
                <p>Create and manage your account, with a very straightforward signup, login and logout.</p>

                <h4>Create Playlist</h4>
                <p>Build your favourite playlists with several options such as revamp the sequence order of videos and undo or redo process.</p>

                <h4>View Playlist</h4>
                <p>Only needs one basic search and you'll get playlists galore.</p>
             </div>

             <div class="col-md-6">
                <h4>Always available</h4>
                <p>This service is always available to all platforms, to all users.</p>

                <h4>Free & Premium</h4>
                <p>The playlists processes are free, but with limited constraints. You can subscribe to remove those constraints.</p>

                <h4>Fast & Efficient</h4>
                <p>Not only is it easy to do, but also very quick and organized very well.</p>
            </div>
        </div>
    </div>

</div>


@code
{
    int usernameIdlogged = 0;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            usernameIdlogged = await sessionStorage.GetItemAsync<int>("UsernameLogged");
            if(usernameIdlogged!=0)
            {
                NavigationManager.NavigateTo("/account/menu");
            }

            StateHasChanged();
        }
    }
}