@page "/signup"
@inject NavigationManager NavigationManager

<style>
    body {
        background: linear-gradient( rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.4) ), url("images/image1.png") no-repeat center center fixed;
        background-size: cover;
    }
</style>

<PageTitle>SignUp</PageTitle>

          <div class="card-body p-md-3">
            <div class="row justify-content-center">
              <div class="col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1">

                <p class="text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4">Sign up</p>

                <EditForm Model="@user" OnSubmit="@HandleValidSubmit" class="mx-1 mx-md-4">
                  <DataAnnotationsValidator />

                  <div class="d-flex flex-row align-items-center mb-4">
                    <img src="https://avatars.dicebear.com/api/identicon/@(user.Username).svg" class="img-fluid rounded mx-auto d-block" alt="Avatar Image" width="100" height="100">
                  </div>

                  <div class="d-flex flex-row align-items-center mb-4">
                    <i class="fas fa-user fa-lg me-3 fa-fw"></i>
                    <div class="form-outline flex-fill mb-0">
                      <InputText id="form3Example1c" class="form-control" placeholder="Username" required maxlength="16" @bind-Value="user.Username"/>
                      <ValidationMessage For="() => user.Username" />
                    </div>
                  </div>

                  <div class="d-flex flex-row align-items-center mb-4">
                    <i class="fas fa-envelope fa-lg me-3 fa-fw"></i>
                    <div class="form-outline flex-fill mb-0">
                      <InputText type="email" id="form3Example3c" class="form-control" placeholder="Email" required @bind-Value="user.Email"/>
                      <ValidationMessage For="() => user.Email" />
                    </div>
                  </div>

                  <div class="d-flex flex-row align-items-center mb-4">
                    <i class="fas fa-lock fa-lg me-3 fa-fw"></i>
                    <div class="form-outline flex-fill mb-0">
                      <InputText type="password" id="form3Example4c" class="form-control" placeholder="Password" required maxlength="16" @bind-Value="user.Password"/>
                      <ValidationMessage For="() => user.Password" />
                    </div>
                  </div>

                  <div class="d-flex flex-row align-items-center mb-4">
                    <i class="fas fa-key fa-lg me-3 fa-fw"></i>
                    <div class="form-outline flex-fill mb-0">
                      <InputText type="password" id="form3Example4cd" class="form-control" placeholder="Confirm Password" required maxlength="16" @bind-Value="user.ConfirmPassword"/>
                      <ValidationMessage For="() => user.ConfirmPassword" />
                    </div>
                  </div>

                  <div class="form-check d-flex justify-content-center mb-5">
                    <InputCheckbox class="form-check-input me-2" type="checkbox" id="form2Example3c" required @bind-Value="user.IsValid"/>
                    <label class="form-check-label" for="form2Example3">
                      I agree all statements in <a href="/">Terms of Service.</a>
                    </label>
                  </div>

                  <div class="d-flex justify-content-center mx-4 mb-3 mb-lg-4">
                    <button type="submit" class="btn btn-primary btn-lg">Create Account</button>
                  </div>

                </EditForm>

              </div>
            </div>
          </div>

@code {
    private User user = new() { };

    private void HandleValidSubmit()
    {
        if (user.Password.Equals(user.ConfirmPassword))
        {
            // Process to save user data

            //Redirect to login page
            NavigationManager.NavigateTo("/login");
        }
    }
}